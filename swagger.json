{
  "openapi": "3.0.0",
  "info": {
    "title": "Pet Support API",
    "description": "Pet Support project backend service",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://pet-support.onrender.com",
      "description": "production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "local server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "User authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users manage endpoints"
    },
    {
      "name": "News",
      "description": "News manage endpoints"
    },
    {
      "name": "Services",
      "description": "Services manage endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices manage endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets manage endpoints"
    }
  ],
  "paths": {
    "/api/news/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/friends/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registration",
        "description": "Creates a new user",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "user": {
                    "id": "63ef667fc42e9578d819c035",
                    "email": "Jhon.Doe@example.com",
                    "name": "Jhon Doe"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Email in use"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUser"
              },
              "example": {
                "email": "Jhon.Doe@example.com",
                "password": "password_example",
                "name": "Jhon Doe",
                "city": "Limburg, Netherlands",
                "phone": "+31-77-2065000"
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/api/users/update": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/api/notices/own": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/api/notices/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/notices/{noticesId}": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "noticesId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "noticesId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/api/pets/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/pets/{petId}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    }
  },
  "components": {
    "schemas": {
      "AddUser": {
        "type": "object",
        "description": "User data",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "password": {
            "type": "string",
            "description": "Password"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "city": {
            "type": "string",
            "description": "City, region"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          }
        },
        "required": [
          "email",
          "password",
          "name",
          "city",
          "phone"
        ]
      },
      "User": {
        "type": "object",
        "description": "User data",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique user ID"
              },
              "email": {
                "type": "string",
                "description": "Email address"
              },
              "name": {
                "type": "string",
                "description": "Name"
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "description": "Error",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    }
  }
}